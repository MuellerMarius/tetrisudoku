{"version":3,"sources":["components/Tetrisudoku/context/GameReducer.tsx","components/Tetrisudoku/context/actions/index.tsx","constants/index.tsx","components/Tetrisudoku/context/GameState.tsx","components/Tetrisudoku/ScoreAnimation.tsx","components/Tetrisudoku/Board.tsx","components/Tetrisudoku/BoardTile.tsx","components/Tetrisudoku/Element.tsx","components/Tetrisudoku/DragPreview.tsx","components/Tetrisudoku/DraggableElement.tsx","components/Tetrisudoku/Sidebar.tsx","components/Tetrisudoku/Topbar.tsx","components/Tetrisudoku/Game.tsx","components/Tetrisudoku/index.tsx","InfoText.tsx","serviceWorker.ts","index.tsx"],"names":["GameReducer","state","action","type","Object","objectSpread","payload","board","draggableElements","map","elem","i","droppedElementIndex","getRandomDraggableElement","BLOCK_COLORS","ELEMENTS","x","y","val","Array","prototype","deepClone","JSON","parse","stringify","this","Cst","Math","floor","random","length","getEmptyBoard","from","fill","getInitialState","score","iterateBlock","xBlock","yBlock","func","apply","GameContext","createContext","GameContextProvider","_ref","children","localState","localStorage","getItem","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","_useState","useState","_useState2","firedScoreAnimation","fireScoreAnimation","useEffect","blockWasCleared","isBlockCompletelyFilled","clearBlock","isAnyElementPlaceable","clearDraggableElements","alert","setItem","resetGame","useCallback","dropElement","index","_step","tempBoard","_iterator","_createForOfIteratorHelper","s","n","done","elemCoord","value","undefined","err","e","f","result","addScore","canElementBeDropped","_step2","canBeDropped","_iterator2","_step3","_iterator3","element","isElementPlacable","_step4","_iterator4","contextValue","useMemo","react_default","a","createElement","Provider","fadeAnimation","keyframes","_templateObject","Animator","styled","div","_templateObject2","ScoreAnimation","props","onAnimationEnd","unselectable","BoardWrapper","Board_templateObject","BlockWrapper","Board_templateObject2","width","LayoutStretcher","_templateObject3","_ref2","height","React","memo","TileWrapper","BoardTile_templateObject","BoardTile_templateObject2","HoverOverlay","BoardTile_templateObject3","isDroppable","_useContext","useContext","_useDrop","useDrop","accept","drop","item","hover","canDrop","collect","monitor","isOver","_useDrop2","onHover","ref","BoardTile_LayoutStretcher","DRAG_ELEMENT_BLOCK_SIZE","PREV_ELEMENT_BLOCK_SIZE","Grid","Element_templateObject","DragGrid","Element_templateObject2","center","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","GridElement","Element_templateObject3","_ref14","_ref15","_ref16","_ref17","isDragging","DragGridElement","_templateObject4","drag","isDragPreview","maxValues","setMaxValues","_useState3","_useState4","minValues","setMinValues","min","max","Element_createForOfIteratorHelper","key","DragWrapper","DragPreview_templateObject","getItemStyles","currentOffset","display","transform","concat","WebkitTransform","_useDragLayer","useDragLayer","itemType","getItemType","getSourceClientOffset","style","Tetrisudoku_Element","setHover","_useDrag","useDrag","end","_useDrag2","preview","getEmptyImage","captureDraggingState","SidebarWrapper","Sidebar_templateObject","ElementsWrapper","Sidebar_templateObject2","Score","Sidebar_templateObject3","SideScore","Sidebar_templateObject4","Sidebar","Tetrisudoku_DragPreview","Tetrisudoku_DraggableElement","TopbarWrapper","Topbar_templateObject","TopScore","Topbar_templateObject2","Topbar","GameWrapper","Game_templateObject","Block","Game_templateObject2","ResetButton","button","Game_templateObject3","Game","initialAnimState","hoverState","setHoverState","scoreAnimations","setScoreAnim","confirmReset","confirm","hoverElement","tempState","Game_createForOfIteratorHelper","row","renderBlock","tiles","push","Tetrisudoku_BoardTile","ScoreAnimation_ScoreAnimation","renderBlocks","blocks","Tetrisudoku_Topbar","Tetrisudoku_Board","Tetrisudoku_Sidebar","onClick","HTML5toTouch","backends","backend","Backend","transition","MouseTransition","TouchBackend","options","enableMouseEvents","TouchTransition","Tetrisudoku","esm","GameState_GameContextProvider","Game_Game","Container","InfoText_templateObject","InfoText","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","GlobalStyle","createGlobalStyle","src_templateObject","App","react","Tetrisudoku_Tetrisudoku","src_InfoText","rootElement","document","getElementById","render","URL","process","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0cc05395.chunk.js","sourcesContent":["import { getRandomDraggableElement } from './GameState';\r\nimport * as actionType from './actions';\r\n\r\nexport default (state: StateObject, action: ActionObject) => {\r\n  switch (action.type) {\r\n    case actionType.UPDATE:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case actionType.DROP:\r\n      return {\r\n        ...state,\r\n        board: action.payload.board,\r\n        draggableElements: state.draggableElements.map((elem, i) =>\r\n          i === action.payload.droppedElementIndex\r\n            ? getRandomDraggableElement()\r\n            : elem\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const UPDATE = 'UPDATE';\r\nexport const DROP = 'DROP';\r\n","// Game\r\nexport const HORIZONTAL_BLOCKS = 3;\r\nexport const VERTICAL_BLOCKS = 3;\r\nexport const BLOCK_WIDTH = 3;\r\nexport const BLOCK_HEIGHT = 3;\r\nexport const DRAG_ELEMENTS_COUNT = 3;\r\n\r\n// Colors\r\nexport const BOARD_BG_COLOR = '#D9DCE2';\r\nexport const BLOCK_COLORS = ['#FEFEFE', '#84A9AC', '#3B6978', '#204051'];\r\nexport const BLOCK_BORDER_COLOR = '#74D8C2';\r\nexport const BLOCK_HOVER_COLOR_DROPPABLE = '#CAE8D5';\r\nexport const BLOCK_HOVER_COLOR_NOT_DROPPABLE = 'rgba(209, 46, 46, 0.4)';\r\n\r\n// Elements\r\nexport const TYPE_ELEMENT = 'ELEMENT';\r\nexport const ELEMENTS = [\r\n  [\r\n    // z\r\n    { x: -1, y: -1, val: 1 },\r\n    { x: 0, y: -1, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 0, y: 1, val: 1 },\r\n    { x: 1, y: 1, val: 1 },\r\n  ],\r\n  [\r\n    // z invers\r\n    { x: -1, y: 1, val: 1 },\r\n    { x: 0, y: 1, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 0, y: -1, val: 1 },\r\n    { x: 1, y: -1, val: 1 },\r\n  ],\r\n  [\r\n    // block\r\n    { x: 0, y: 0, val: 2 },\r\n    { x: 0, y: 1, val: 2 },\r\n    { x: 1, y: 0, val: 2 },\r\n    { x: 1, y: 1, val: 2 },\r\n  ],\r\n  [\r\n    // L\r\n    { x: 0, y: -1, val: 2 },\r\n    { x: 0, y: 0, val: 2 },\r\n    { x: 0, y: 1, val: 2 },\r\n    { x: 1, y: 1, val: 2 },\r\n  ],\r\n  [\r\n    // L invers\r\n    { x: 1, y: -1, val: 2 },\r\n    { x: 0, y: -1, val: 2 },\r\n    { x: 0, y: 0, val: 2 },\r\n    { x: 0, y: 1, val: 2 },\r\n  ],\r\n  [\r\n    // I\r\n    { x: 0, y: -1, val: 3 },\r\n    { x: 0, y: 0, val: 3 },\r\n    { x: 0, y: 1, val: 3 },\r\n    { x: 0, y: 2, val: 3 },\r\n  ],\r\n  [\r\n    // _\r\n    { x: -1, y: 0, val: 3 },\r\n    { x: 0, y: 0, val: 3 },\r\n    { x: 1, y: 0, val: 3 },\r\n    { x: 2, y: 0, val: 3 },\r\n  ],\r\n  [\r\n    // lying L\r\n    { x: -1, y: 1, val: 3 },\r\n    { x: -1, y: 0, val: 3 },\r\n    { x: 0, y: 0, val: 3 },\r\n    { x: 1, y: 0, val: 3 },\r\n  ],\r\n  [\r\n    // lying L invers\r\n    { x: -1, y: 0, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 1, y: 0, val: 1 },\r\n    { x: 1, y: 1, val: 1 },\r\n  ],\r\n  [\r\n    // T\r\n    { x: -1, y: 0, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 1, y: 0, val: 1 },\r\n    { x: 0, y: -1, val: 1 },\r\n  ],\r\n  [\r\n    // T invers\r\n    { x: -1, y: 0, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 1, y: 0, val: 1 },\r\n    { x: 0, y: 1, val: 1 },\r\n  ],\r\n  [\r\n    // T rotated 90°\r\n    { x: -1, y: 0, val: 1 },\r\n    { x: 0, y: 1, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 0, y: -1, val: 1 },\r\n  ],\r\n  [\r\n    // T rotated 270°\r\n    { x: 1, y: 0, val: 1 },\r\n    { x: 0, y: 1, val: 1 },\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 0, y: -1, val: 1 },\r\n  ],\r\n  [\r\n    // simple block\r\n    { x: 0, y: 0, val: 1 },\r\n  ],\r\n  [\r\n    // small I\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 0, y: 1, val: 1 },\r\n  ],\r\n  [\r\n    // small -\r\n    { x: 0, y: 0, val: 1 },\r\n    { x: 1, y: 0, val: 1 },\r\n  ],\r\n];\r\n","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport GameReducer from './GameReducer';\r\nimport * as actionType from './actions';\r\nimport * as Cst from '../../../constants';\r\n\r\ndeclare global {\r\n  interface Array<T> {\r\n    deepClone(): Array<T>;\r\n  }\r\n}\r\n\r\nArray.prototype.deepClone = function() {\r\n  return JSON.parse(JSON.stringify(this));\r\n};\r\n\r\nexport const getRandomDraggableElement = () => {\r\n  return Cst.ELEMENTS[Math.floor(Math.random() * Cst.ELEMENTS.length)];\r\n};\r\n\r\nexport const getEmptyBoard = () => {\r\n  return Array.from(Array(Cst.VERTICAL_BLOCKS * Cst.BLOCK_HEIGHT), () =>\r\n    new Array(Cst.HORIZONTAL_BLOCKS * Cst.BLOCK_WIDTH).fill(0)\r\n  );\r\n};\r\n\r\nconst getInitialState = () => {\r\n  return {\r\n    board: getEmptyBoard(),\r\n    draggableElements: [\r\n      getRandomDraggableElement(),\r\n      getRandomDraggableElement(),\r\n      getRandomDraggableElement(),\r\n    ],\r\n    score: 0,\r\n  };\r\n};\r\n\r\nexport const iterateBlock = (\r\n  xBlock: number,\r\n  yBlock: number,\r\n  func: (x: number, y: number) => boolean | void\r\n) => {\r\n  for (\r\n    let y = yBlock * Cst.BLOCK_HEIGHT;\r\n    y < (yBlock + 1) * Cst.BLOCK_HEIGHT;\r\n    y++\r\n  ) {\r\n    for (\r\n      let x = xBlock * Cst.BLOCK_WIDTH;\r\n      x < (xBlock + 1) * Cst.BLOCK_WIDTH;\r\n      x++\r\n    ) {\r\n      func.apply(null, [x, y]);\r\n    }\r\n  }\r\n};\r\n\r\nexport const GameContext = createContext<GameContextProps>(\r\n  {} as GameContextProps\r\n);\r\n\r\nexport const GameContextProvider = ({ children }) => {\r\n  const localState = JSON.parse(localStorage.getItem('gameState'));\r\n  const [state, dispatch] = useReducer(\r\n    GameReducer,\r\n    localState || getInitialState()\r\n  );\r\n  const [firedScoreAnimation, fireScoreAnimation] = useState<\r\n    FiredScoreAnimation\r\n  >({} as FiredScoreAnimation);\r\n\r\n  useEffect(() => {\r\n    let blockWasCleared = false;\r\n\r\n    for (let yBlock = 0; yBlock < Cst.VERTICAL_BLOCKS; yBlock++) {\r\n      for (let xBlock = 0; xBlock < Cst.HORIZONTAL_BLOCKS; xBlock++) {\r\n        if (isBlockCompletelyFilled(xBlock, yBlock)) {\r\n          clearBlock(xBlock, yBlock);\r\n          blockWasCleared = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      !blockWasCleared &&\r\n      state.draggableElements.length > 0 &&\r\n      !isAnyElementPlaceable()\r\n    ) {\r\n      clearDraggableElements();\r\n      alert('Game over!');\r\n    }\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('gameState', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  const resetGame = useCallback(() => {\r\n    dispatch({\r\n      type: actionType.UPDATE,\r\n      payload: getInitialState(),\r\n    });\r\n  }, []);\r\n\r\n  const dropElement = useCallback(\r\n    (x: number, y: number, index: number) => {\r\n      const tempBoard = state.board.deepClone();\r\n\r\n      for (const elemCoord of state.draggableElements[index]) {\r\n        if (\r\n          state.board[y + elemCoord.y] !== undefined &&\r\n          state.board[y + elemCoord.y][x + elemCoord.x] !== undefined &&\r\n          state.board[y + elemCoord.y][x + elemCoord.x] === 0\r\n        ) {\r\n          tempBoard[y + elemCoord.y][x + elemCoord.x] = elemCoord.val;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n\r\n      dispatch({\r\n        type: actionType.DROP,\r\n        payload: {\r\n          board: tempBoard,\r\n          droppedElementIndex: index,\r\n        },\r\n      });\r\n    },\r\n    [state.board, state.draggableElements]\r\n  );\r\n\r\n  const clearDraggableElements = useCallback(() => {\r\n    dispatch({\r\n      type: actionType.UPDATE,\r\n      payload: { draggableElements: [] },\r\n    });\r\n  }, []);\r\n\r\n  const isBlockCompletelyFilled = (xBlock: number, yBlock: number): boolean => {\r\n    let result = true;\r\n    iterateBlock(xBlock, yBlock, (x: number, y: number) => {\r\n      if (state.board[y][x] === 0) result = false;\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const clearBlock = (xBlock: number, yBlock: number) => {\r\n    const tempBoard = state.board.deepClone();\r\n    let addScore = 0;\r\n\r\n    iterateBlock(xBlock, yBlock, (x: number, y: number) => {\r\n      tempBoard[y][x] = 0;\r\n      addScore += state.board[y][x];\r\n    });\r\n\r\n    fireScoreAnimation({ xBlock, yBlock, addScore });\r\n\r\n    dispatch({\r\n      type: actionType.UPDATE,\r\n      payload: {\r\n        board: tempBoard,\r\n        score: state.score + addScore,\r\n      },\r\n    });\r\n  };\r\n\r\n  const canElementBeDropped = useCallback(\r\n    (x: number, y: number, index: number) => {\r\n      let canBeDropped = true;\r\n\r\n      for (const elemCoord of state.draggableElements[index]) {\r\n        if (\r\n          state.board[y + elemCoord.y] === undefined ||\r\n          state.board[y + elemCoord.y][x + elemCoord.x] === undefined ||\r\n          state.board[y + elemCoord.y][x + elemCoord.x] !== 0\r\n        ) {\r\n          canBeDropped = false;\r\n        }\r\n      }\r\n      return canBeDropped;\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const isAnyElementPlaceable = () => {\r\n    for (const element of state.draggableElements) {\r\n      if (isElementPlacable(element)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const isElementPlacable = (elem: ElemCoord[]) => {\r\n    const boardWidth = Cst.HORIZONTAL_BLOCKS * Cst.BLOCK_WIDTH;\r\n    const boardHeight = Cst.VERTICAL_BLOCKS * Cst.BLOCK_HEIGHT;\r\n    for (let y = 0; y < boardHeight; y++) {\r\n      for (let x = 0; x < boardWidth; x++) {\r\n        let canBeDropped = true;\r\n        for (const elemCoord of elem) {\r\n          if (\r\n            state.board[y + elemCoord.y] === undefined ||\r\n            state.board[y + elemCoord.y][x + elemCoord.x] === undefined ||\r\n            state.board[y + elemCoord.y][x + elemCoord.x] !== 0\r\n          ) {\r\n            canBeDropped = false;\r\n          }\r\n        }\r\n        if (canBeDropped) return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const contextValue = useMemo(() => {\r\n    return {\r\n      board: state.board,\r\n      draggableElements: state.draggableElements,\r\n      score: state.score,\r\n      firedScoreAnimation,\r\n      dropElement,\r\n      clearDraggableElements,\r\n      canElementBeDropped,\r\n      resetGame,\r\n    };\r\n  }, [\r\n    state,\r\n    dropElement,\r\n    clearDraggableElements,\r\n    canElementBeDropped,\r\n    firedScoreAnimation,\r\n  ]);\r\n\r\n  return (\r\n    <GameContext.Provider value={contextValue}>{children}</GameContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst fadeAnimation = keyframes`\r\n  0%    {opacity: 0; transform: scale(0);}\r\n  20%   {opacity: 1; }\r\n  80%   {opacity: 0;}\r\n  99%   {opacity: 0; transform: scale(30)};\r\n  100%  { transform: scale(0)}\r\n`;\r\n\r\nconst Animator = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  z-index: 100;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  animation: ${fadeAnimation} 0.6s ease-in-out 1;\r\n  animation-fill-mode: forwards;\r\n  user-select: none;\r\n`;\r\n\r\nexport const ScoreAnimation: React.FC<ScoreAnimationProps> = (props) => {\r\n  return (\r\n    <Animator onAnimationEnd={props.onAnimationEnd}>\r\n      <div unselectable=\"on\">{props.score}</div>\r\n    </Animator>\r\n  );\r\n};\r\n\r\nScoreAnimation.propTypes = {\r\n  onAnimationEnd: PropTypes.func,\r\n  score: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Cst from '../../constants';\r\n\r\nconst BoardWrapper = styled.div`\r\n  box-shadow: 0px 0px 15px 0px rgba(0, 0, 0, 0.35);\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  grid-column: 1 / 2;\r\n  z-index: 1;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-column: 1 / 3;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);\r\n  }\r\n`;\r\n\r\nconst BlockWrapper = styled.div<WrapperProps>`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(${({ width }) => width}, 1fr);\r\n  grid-row-gap: 0px;\r\n  grid-column-gap: 0px;\r\n  background-color: ${Cst.BOARD_BG_COLOR};\r\n`;\r\n\r\nconst LayoutStretcher = styled.div<WrapperProps>`\r\n  display: inline-block;\r\n  margin-top: ${({ width, height }) => (height / width) * 100}%;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Board: React.FC<BoardProps> = (props) => {\r\n  return (\r\n    <BoardWrapper>\r\n      <LayoutStretcher\r\n        width={Cst.HORIZONTAL_BLOCKS * Cst.BLOCK_WIDTH}\r\n        height={Cst.VERTICAL_BLOCKS * Cst.BLOCK_HEIGHT}\r\n      />\r\n      <BlockWrapper width={Cst.HORIZONTAL_BLOCKS}>\r\n        {props.children}\r\n      </BlockWrapper>\r\n    </BoardWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Board);\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useDrop } from 'react-dnd';\r\nimport { GameContext } from './context/GameState';\r\nimport * as Cst from '../../constants';\r\n\r\nconst TileWrapper = styled.div<TileWrapperProps>`\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: translateZ(0);\r\n  background-color: ${({ value }) => Cst.BLOCK_COLORS[value]};\r\n  transition: background-color 0.4s ease-in-out;\r\n`;\r\n\r\nconst LayoutStretcher = styled.div`\r\n  display: relative;\r\n  margin-top: 100%;\r\n  bottom: 0;\r\n  z-index: -1;\r\n`;\r\n\r\nconst HoverOverlay = styled.div<TileHoverProps>`\r\n  position: relative;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n  background-color: ${({ isDroppable }) =>\r\n    isDroppable\r\n      ? Cst.BLOCK_HOVER_COLOR_DROPPABLE\r\n      : Cst.BLOCK_HOVER_COLOR_NOT_DROPPABLE};\r\n`;\r\n\r\nconst BoardTile: React.FC<BoardTileProps> = (props) => {\r\n  const { board, dropElement, canElementBeDropped } = useContext(GameContext);\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: Cst.TYPE_ELEMENT,\r\n    drop: (item: dragItem) => {\r\n      dropElement(props.x, props.y, item.index);\r\n    },\r\n    hover: (item: dragItem) => {\r\n      hover(item.index);\r\n    },\r\n    canDrop: (item) => canElementBeDropped(props.x, props.y, item.index),\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const hover = (index: number) => {\r\n    !isOver && props.onHover(props.x, props.y, index);\r\n  };\r\n\r\n  return (\r\n    <TileWrapper value={board[props.y][props.x]} ref={drop}>\r\n      {props.hover !== 0 && <HoverOverlay isDroppable={props.hover >= 0} />}\r\n      <LayoutStretcher />\r\n    </TileWrapper>\r\n  );\r\n};\r\n\r\nBoardTile.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  hover: PropTypes.number.isRequired,\r\n  onHover: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(BoardTile);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport * as Cst from '../../constants';\r\n\r\nconst DRAG_ELEMENT_BLOCK_SIZE = {\r\n  small: 35,\r\n  medium: 45,\r\n  large: 50,\r\n  xlarge: 60,\r\n};\r\n\r\nconst PREV_ELEMENT_BLOCK_SIZE = {\r\n  small: 22,\r\n  medium: 30,\r\n  large: 40,\r\n};\r\n\r\nconst Grid = styled.div<GridProps>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${({ width }) => width}, 1fr);\r\n  grid-row-gap: 1px;\r\n  grid-column-gap: 1px;\r\n  margin: auto;\r\n`;\r\n\r\nconst DragGrid = styled(Grid)`\r\n  position: relative;\r\n  grid-row-gap: 10px;\r\n  grid-column-gap: 10px;\r\n  margin: inherit;\r\n\r\n  left: ${({ center }) => center.x * DRAG_ELEMENT_BLOCK_SIZE['xlarge']}px;\r\n  top: ${({ center }) => center.y * DRAG_ELEMENT_BLOCK_SIZE['xlarge']}px;\r\n  width: ${({ width }) => width * DRAG_ELEMENT_BLOCK_SIZE['xlarge']}px;\r\n\r\n  @media (max-width: 1200px) {\r\n    left: ${({ center }) => center.x * DRAG_ELEMENT_BLOCK_SIZE['large']}px;\r\n    top: ${({ center }) => center.y * DRAG_ELEMENT_BLOCK_SIZE['large']}px;\r\n    width: ${({ width }) => width * DRAG_ELEMENT_BLOCK_SIZE['large']}px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    left: ${({ center }) => center.x * DRAG_ELEMENT_BLOCK_SIZE['medium']}px;\r\n    top: ${({ center }) => center.y * DRAG_ELEMENT_BLOCK_SIZE['medium']}px;\r\n    width: ${({ width }) => width * DRAG_ELEMENT_BLOCK_SIZE['medium']}px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    left: ${({ center }) => center.x * DRAG_ELEMENT_BLOCK_SIZE['small']}px;\r\n    top: ${({ center }) => center.y * DRAG_ELEMENT_BLOCK_SIZE['small']}px;\r\n    width: ${({ width }) => width * DRAG_ELEMENT_BLOCK_SIZE['small']}px;\r\n  }\r\n`;\r\n\r\nconst GridElement = styled.div<GridElementProps>`\r\n  transform: translateZ(0);\r\n  grid-column: ${({ x }) => x};\r\n  grid-row: ${({ y }) => y};\r\n  background-color: ${({ val }) => Cst.BLOCK_COLORS[val]};\r\n  padding-top: 100%;\r\n  opacity: ${({ isDragging }) => (isDragging ? 0.3 : 1)};\r\n  transition: opacity 0.2s ease-in-out;\r\n  width: ${PREV_ELEMENT_BLOCK_SIZE['large']}px;\r\n\r\n  @media (max-width: 1350px) {\r\n    width: ${PREV_ELEMENT_BLOCK_SIZE['medium']}px;\r\n  }\r\n\r\n  @media (max-width: 764px) {\r\n    width: ${PREV_ELEMENT_BLOCK_SIZE['small']}px;\r\n  }\r\n`;\r\n\r\nconst DragGridElement = styled(GridElement)`\r\n  opacity: 1;\r\n  width: ${DRAG_ELEMENT_BLOCK_SIZE['xlarge']}px;\r\n  height: ${DRAG_ELEMENT_BLOCK_SIZE['xlarge']}px;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: ${DRAG_ELEMENT_BLOCK_SIZE['large']}px;\r\n    height: ${DRAG_ELEMENT_BLOCK_SIZE['large']}px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    width: ${DRAG_ELEMENT_BLOCK_SIZE['medium']}px;\r\n    height: ${DRAG_ELEMENT_BLOCK_SIZE['medium']}px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: ${DRAG_ELEMENT_BLOCK_SIZE['small']}px;\r\n    height: ${DRAG_ELEMENT_BLOCK_SIZE['small']}px;\r\n  }\r\n`;\r\n\r\nconst Element: React.FC<ElementProps> = (props) => {\r\n  const { element, drag, isDragging, isDragPreview } = props;\r\n  const [maxValues, setMaxValues] = useState<MinMax>({ x: 0, y: 0 });\r\n  const [minValues, setMinValues] = useState<MinMax>({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    let min = { x: element[0].x, y: element[0].y };\r\n    let max = { x: element[0].x, y: element[0].y };\r\n\r\n    for (const elemCoord of element) {\r\n      min = {\r\n        x: elemCoord.x > min.x ? min.x : elemCoord.x,\r\n        y: elemCoord.y > min.y ? min.y : elemCoord.y,\r\n      };\r\n      max = {\r\n        x: elemCoord.x < min.x ? min.x : elemCoord.x,\r\n        y: elemCoord.y < min.y ? min.y : elemCoord.y,\r\n      };\r\n    }\r\n\r\n    setMinValues(min);\r\n    setMaxValues(max);\r\n  }, [element]);\r\n\r\n  return isDragPreview ? (\r\n    <DragGrid width={maxValues.x - minValues.x + 1} center={minValues}>\r\n      {element.map((elemCoord, i) => (\r\n        <DragGridElement\r\n          key={i}\r\n          x={elemCoord.x - minValues.x + 1}\r\n          y={elemCoord.y - minValues.y + 1}\r\n          val={elemCoord.val}\r\n          isDragging={isDragging}\r\n        />\r\n      ))}\r\n    </DragGrid>\r\n  ) : (\r\n    <Grid width={maxValues.x - minValues.x + 1} center={minValues} ref={drag}>\r\n      {element.map((elemCoord, i) => (\r\n        <GridElement\r\n          key={i}\r\n          x={elemCoord.x - minValues.x + 1}\r\n          y={elemCoord.y - minValues.y + 1}\r\n          val={elemCoord.val}\r\n          isDragging={isDragging}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nElement.propTypes = {\r\n  element: PropTypes.array.isRequired,\r\n  isDragging: PropTypes.bool.isRequired,\r\n  drag: PropTypes.func,\r\n  isDragPreview: PropTypes.bool,\r\n};\r\n\r\nexport default React.memo(Element);\r\n","import React, { useContext } from 'react';\r\nimport { XYCoord, useDragLayer } from 'react-dnd';\r\nimport styled from 'styled-components';\r\nimport { GameContext } from './context/GameState';\r\nimport Element from './Element';\r\n\r\nconst DragWrapper = styled.div`\r\n  position: fixed;\r\n  pointer-events: none;\r\n  z-index: 100;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nfunction getItemStyles(currentOffset: XYCoord | null) {\r\n  if (!currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n  const { x, y } = currentOffset;\r\n\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n}\r\n\r\nconst DragPreview: React.FC = () => {\r\n  const { draggableElements } = useContext(GameContext);\r\n  const { isDragging, item, currentOffset } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem(),\r\n    itemType: monitor.getItemType(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  // TODO: this line solves github issue #6\r\n  if (\r\n    !isDragging ||\r\n    draggableElements.length === 0 ||\r\n    typeof item.index === 'undefined'\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragWrapper>\r\n      <div style={getItemStyles(currentOffset)}>\r\n        <div>\r\n          <Element\r\n            element={draggableElements[item.index]}\r\n            isDragging={isDragging}\r\n            isDragPreview\r\n          />\r\n        </div>\r\n      </div>\r\n    </DragWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DragPreview);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\nimport Element from './Element';\r\nimport * as Cst from '../../constants';\r\n\r\nconst DraggableElement: React.FC<DraggableElementProps> = (props) => {\r\n  const { element, index, setHover } = props;\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: Cst.TYPE_ELEMENT, index },\r\n    end: () => {\r\n      setHover(0, 0, -1);\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, []);\r\n\r\n  return <Element element={element} drag={drag} isDragging={isDragging} />;\r\n};\r\n\r\nDraggableElement.propTypes = {\r\n  element: PropTypes.array.isRequired,\r\n  setHover: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(DraggableElement);\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { GameContext } from './context/GameState';\r\nimport DragPreview from './DragPreview';\r\nimport DraggableElement from './DraggableElement';\r\nimport * as Cst from '../../constants';\r\n\r\nconst SidebarWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 97%;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  background-color: ${Cst.BOARD_BG_COLOR};\r\n  border-radius: 0 10px 10px 0;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 90%;\r\n    left: 5%;\r\n    top: 0;\r\n    height: 100%;\r\n    grid-column: 1 / 3;\r\n    border-radius: 0 0 5px 5px;\r\n    padding: 7px;\r\n  }\r\n`;\r\n\r\nconst ElementsWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: grid;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(${Cst.DRAG_ELEMENTS_COUNT}, 1fr);\r\n    grid-column-gap: 10px;\r\n    min-height: 125px;\r\n  }\r\n\r\n  @media (min-width: 769px) {\r\n    height: 80%;\r\n    grid-template-rows: repeat(${Cst.DRAG_ELEMENTS_COUNT}, 1fr);\r\n    grid-row-gap: 10px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Score = styled.div`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  width: 100%;\r\n  text-align: center;\r\n  user-select: none;\r\n\r\n  & p {\r\n    margin-bottom: 0;\r\n    margin-top: 10px;\r\n    font-size: 25pt;\r\n    line-height: 25pt;\r\n\r\n    @media (max-width: 768px) {\r\n      margin-top: 0;\r\n      font-size: 18pt;\r\n      line-height: 18pt;\r\n    }\r\n\r\n    @media (min-width: 992px) {\r\n      font-size: 40pt;\r\n      line-height: 40pt;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SideScore = styled(Score)`\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC<SidebarProps> = (props) => {\r\n  const { draggableElements, score } = useContext(GameContext);\r\n\r\n  return (\r\n    <SidebarWrapper>\r\n      <SideScore>\r\n        SCORE<p>{score}</p>\r\n      </SideScore>\r\n      <ElementsWrapper>\r\n        <DragPreview />\r\n        {draggableElements.map((element, index) => (\r\n          <DraggableElement\r\n            key={index}\r\n            index={index}\r\n            element={element}\r\n            setHover={props.setHover}\r\n          />\r\n        ))}\r\n      </ElementsWrapper>\r\n    </SidebarWrapper>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  setHover: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameContext } from './context/GameState';\r\nimport { Score } from './Sidebar';\r\nimport * as Cst from '../../constants';\r\n\r\nconst TopbarWrapper = styled.div`\r\n  width: 40%;\r\n  height: 100%;\r\n  left: 30%;\r\n  position: relative;\r\n  grid-column: 1 / 3;\r\n  grid-row: 1;\r\n  background-color: ${Cst.BOARD_BG_COLOR};\r\n  border-radius: 5px 5px 0 0;\r\n  color: #555;\r\n  padding: 5px 25px 5px 25px;\r\n  font-size: 14pt;\r\n  z-index: 0;\r\n\r\n  @media (min-width: 769px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst TopScore = styled(Score)`\r\n  margin-top: 0;\r\n  font-size: 11pt;\r\n  margin-bottom: 5px;\r\n\r\n  @media (min-width: 769px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Topbar: React.FC = () => {\r\n  const { score } = useContext(GameContext);\r\n\r\n  return (\r\n    <TopbarWrapper>\r\n      <TopScore>\r\n        SCORE<p>{score}</p>\r\n      </TopScore>\r\n    </TopbarWrapper>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  ReactChild,\r\n  useContext,\r\n  useEffect,\r\n} from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameContext, getEmptyBoard, iterateBlock } from './context/GameState';\r\nimport { ScoreAnimation } from './ScoreAnimation';\r\nimport Board from './Board';\r\nimport BoardTile from './BoardTile';\r\nimport Sidebar from './Sidebar';\r\nimport Topbar from './Topbar';\r\nimport * as Cst from '../../constants';\r\n\r\nconst GameWrapper = styled.div`\r\n  position: relative;\r\n  top: 10px;\r\n  width: 85%;\r\n  left: 7.5%;\r\n  display: grid;\r\n  grid-template-columns: 80% 20%;\r\n\r\n  @media (min-width: 1200px) {\r\n    top: 25px;\r\n    width: 65%;\r\n    left: 17.5%;\r\n  }\r\n\r\n  @media (min-width: 1600px) {\r\n    width: 55%;\r\n    left: 22.5%;\r\n  }\r\n`;\r\n\r\nconst Block = styled.div`\r\n  position: relative;\r\n  border: 1px solid ${Cst.BLOCK_BORDER_COLOR};\r\n  display: grid;\r\n  grid-template-columns: repeat(${Cst.BLOCK_WIDTH}, 1fr);\r\n  grid-row-gap: 1px;\r\n  grid-column-gap: 1px;\r\n`;\r\n\r\nconst ResetButton = styled.button`\r\n  cursor: pointer;\r\n  grid-column: 1 / 3;\r\n  width: 100%;\r\n  margin-top: 25px;\r\n  padding: 13px;\r\n  background-color: rgb(254, 254, 254);\r\n  border: solid 1px #8c95a6;\r\n  color: #8c95a6;\r\n  border-radius: 10px;\r\n  font-size: 1.3rem;\r\n  font-weight: 600;\r\n\r\n  &:hover {\r\n    background-color: #84a9ac;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    position: relative;\r\n    left: 5%;\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const Game: React.FC = () => {\r\n  const initialAnimState = Array(\r\n    Cst.HORIZONTAL_BLOCKS * Cst.VERTICAL_BLOCKS\r\n  ).fill(0);\r\n\r\n  const [hoverState, setHoverState] = useState<number[][]>(getEmptyBoard());\r\n  const [scoreAnimations, setScoreAnim] = useState<number[]>(initialAnimState);\r\n  const {\r\n    board,\r\n    draggableElements,\r\n    firedScoreAnimation,\r\n    resetGame,\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    setScoreAnim((scoreAnimations) =>\r\n      scoreAnimations.map((elem, index) =>\r\n        index ===\r\n        firedScoreAnimation.yBlock * Cst.HORIZONTAL_BLOCKS +\r\n          firedScoreAnimation.xBlock\r\n          ? firedScoreAnimation.addScore\r\n          : elem\r\n      )\r\n    );\r\n  }, [firedScoreAnimation]);\r\n\r\n  const confirmReset = useCallback(() => {\r\n    if (confirm('Do you really want to start a new game?')) {\r\n      resetGame();\r\n    }\r\n  }, []);\r\n\r\n  const hoverElement = useCallback(\r\n    (x: number, y: number, index: number) => {\r\n      const element = index >= 0 ? draggableElements[index] : [];\r\n      let tempState = getEmptyBoard();\r\n      let canBeDropped = true;\r\n\r\n      for (const elemCoord of element) {\r\n        if (\r\n          board[y + elemCoord.y] !== undefined &&\r\n          board[y + elemCoord.y][x + elemCoord.x] !== undefined\r\n        ) {\r\n          tempState[y + elemCoord.y][x + elemCoord.x] = 1;\r\n          if (board[y + elemCoord.y][x + elemCoord.x] !== 0) {\r\n            canBeDropped = false;\r\n          }\r\n        } else {\r\n          canBeDropped = false;\r\n        }\r\n      }\r\n\r\n      if (!canBeDropped) {\r\n        tempState = tempState.map((row) =>\r\n          row.map((item) => (item !== 0 ? item * -1 : 0))\r\n        );\r\n      }\r\n\r\n      setHoverState(tempState);\r\n    },\r\n    [board, draggableElements]\r\n  );\r\n\r\n  const renderBlock = useCallback(\r\n    (xBlock: number, yBlock: number) => {\r\n      const tiles: ReactChild[] = [];\r\n      const index = yBlock * Cst.HORIZONTAL_BLOCKS + xBlock;\r\n      iterateBlock(xBlock, yBlock, (x: number, y: number) => {\r\n        tiles.push(\r\n          <BoardTile\r\n            key={`${x}${y}`}\r\n            x={x}\r\n            y={y}\r\n            hover={hoverState[y][x]}\r\n            onHover={hoverElement}\r\n          />\r\n        );\r\n      });\r\n\r\n      return (\r\n        <Block key={index}>\r\n          {tiles}\r\n          {scoreAnimations[index] > 0 && (\r\n            <ScoreAnimation\r\n              score={scoreAnimations[index]}\r\n              onAnimationEnd={() =>\r\n                setScoreAnim((scoreAnimations) =>\r\n                  scoreAnimations.map((elem, i) => (i === index ? 0 : elem))\r\n                )\r\n              }\r\n            />\r\n          )}\r\n        </Block>\r\n      );\r\n    },\r\n    [hoverState, hoverElement, scoreAnimations]\r\n  );\r\n\r\n  const renderBlocks = useCallback(() => {\r\n    const blocks: ReactChild[] = [];\r\n    for (let y = 0; y < Cst.VERTICAL_BLOCKS; y++) {\r\n      for (let x = 0; x < Cst.HORIZONTAL_BLOCKS; x++) {\r\n        blocks.push(renderBlock(x, y));\r\n      }\r\n    }\r\n    return blocks;\r\n  }, [renderBlock]);\r\n\r\n  return (\r\n    <GameWrapper>\r\n      <Topbar />\r\n      <Board>{renderBlocks()}</Board>\r\n      <Sidebar setHover={hoverElement} />\r\n      <ResetButton onClick={() => confirmReset()}>Reset Game</ResetButton>\r\n    </GameWrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  DndProvider,\r\n  TouchTransition,\r\n  MouseTransition,\r\n} from 'react-dnd-multi-backend';\r\nimport TouchBackend from 'react-dnd-touch-backend';\r\nimport Backend from 'react-dnd-html5-backend';\r\nimport { GameContextProvider } from './context/GameState';\r\nimport { Game } from './Game';\r\n\r\nconst HTML5toTouch = {\r\n  backends: [\r\n    {\r\n      backend: Backend,\r\n      transition: MouseTransition,\r\n    },\r\n    {\r\n      backend: TouchBackend,\r\n      options: { enableMouseEvents: true },\r\n      preview: true,\r\n      transition: TouchTransition,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const Tetrisudoku: React.FC = () => {\r\n  return (\r\n    <DndProvider options={HTML5toTouch}>\r\n      <GameContextProvider>\r\n        <Game />\r\n      </GameContextProvider>\r\n    </DndProvider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  top: 40px;\r\n  width: 85%;\r\n  left: 7.5%;\r\n  text-align: justify;\r\n\r\n  @media (min-width: 1200px) {\r\n    top: 75px;\r\n    width: 65%;\r\n    left: 17.5%;\r\n  }\r\n\r\n  @media (min-width: 1600px) {\r\n    width: 55%;\r\n    left: 22.5%;\r\n  }\r\n\r\n  & p {\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst InfoText: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <h3>Tetrisodoku</h3>\r\n      <p>\r\n        Tetrisodoku is a game combining the famous game Tetris and Sodoku. With\r\n        each move you can chose between three Tetris tiles which you can drag\r\n        and drop anywhere on the game board. Once you completely fill one of the\r\n        marked squares on the gameboard, the blocks disappear and make room for\r\n        new tiles to place. On top of that you will be credited the respective\r\n        score. The darker the color of the Tetris blocks, the more points you\r\n        will receive. Chose wiseley where to place your tiles as the game is\r\n        over when none of the tiles can be placed on the board any more.\r\n      </p>\r\n      <h3>Source code</h3>\r\n      <p>\r\n        This game is a little fun project written in Typescript and React. If\r\n        you are interested in the source code please visit the{' '}\r\n        <a href=\"https://github.com/MuellerMarius/tetrisudoku\">\r\n          Github repository\r\n        </a>\r\n        . I would be happy if you leave a comment or suggestion for improvement!\r\n        Thanks and stay healthy!\r\n      </p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InfoText;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Tetrisudoku } from './components/Tetrisudoku';\r\nimport InfoText from './InfoText';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #fefefe;\r\n    background: linear-gradient(0deg, rgba(254,254,254,1) 60%, rgba(20,40,51,0.75) 60%);\r\n    background-repeat: no-repeat;\r\n    font-family: 'Noto Sans TC', sans-serif;\r\n    font-size: 12pt;\r\n    color: #323232;\r\n\r\n    @media (max-width: 700px) {\r\n      background: #fefefe;  \r\n      background: linear-gradient(0deg, rgba(254,254,254,1) 70%, rgba(20,40,51,0.75) 70%);\r\n      background-repeat: no-repeat;\r\n    }\r\n\r\n    @media (max-width: 400px) {\r\n      background: #fefefe;  \r\n      background: linear-gradient(0deg, rgba(254,254,254,1) 80%, rgba(20,40,51,0.75) 80%);\r\n      background-repeat: no-repeat;\r\n      font-size: 11pt;\r\n    }\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <GlobalStyle />\r\n      <Tetrisudoku />\r\n      <InfoText />\r\n    </main>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\nserviceWorker.register();\r\n"],"sourceRoot":""}